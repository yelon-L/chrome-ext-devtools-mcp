/**
 * @license
 * Copyright 2025 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

import {ToolCategories} from './categories.js';
import {defineTool} from './ToolDefinition.js';

export {getPageConsoleLogs} from './console-history.js';

export const consoleTool = defineTool({
  name: 'list_console_messages',
  description: `List all console messages for the currently selected page since the last navigation.

**How it works**:
- ✅ Console messages are automatically collected from all pages (no injection needed)
- ✅ Collection starts when MCP server connects to the browser
- ✅ Messages accumulate continuously while you use other tools
- ⚠️ Messages are cleared when page navigates (refresh/URL change)

**Limitations**:
- ❌ Cannot retrieve logs from before MCP server connected
- ❌ Cannot retrieve logs from before last navigation
- ✅ CAN retrieve all logs since last navigation, even if generated by other tool calls

**Best practice workflow**:
1. Navigate to page (navigate_page / new_page)
2. Perform actions that generate logs (evaluate_script, click, etc.)
3. Call list_console_messages to see all accumulated logs

**If you need historical logs** (from before MCP connected):
- Solution: Refresh the page first, then perform actions, then check logs
- Alternative: Use browser DevTools to view logs that existed before MCP connection`,
  annotations: {
    category: ToolCategories.DEBUGGING,
    readOnlyHint: true,
  },
  schema: {},
  handler: async (_request, response) => {
    response.setIncludeConsoleData(true);
  },
});
